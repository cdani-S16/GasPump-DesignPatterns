
package abstractFactory;

import strategy.*;


public interface AbstractFactory {

	//abstract factory class, concrete factory 1 & 2 implement these methods
	
	public StoreData getStoreData();

	public PayMsg getPayMsg();

	public StoreCash getStoreCash();

	public DisplayMenu getDisplayMenu();

	public RejectMsg getRejectMsg();

	public PayType getPayType();

	public SetPrice getSetPrice();

	public ReadyMsg getReadyMsg();

	public SetInitialValues getSetInitialValues();

	public PumpGasUnit getPumpGasUnit();

	public GasPumpedMsg getGasPumpedMsg();

	public StopMsg getStopMsg();

	public PrintReceiptMsg getPrintReceiptMsg();

	public CancelMsg getCancelMsg();
	
	public ReturnCash getReturnCash();
	
}
package abstractFactory;

import dataStore.DataStore;
import dataStore.DataStore1;
import strategy.CancelMsg;
import strategy.CancelMsgGP;
import strategy.DisplayMenu;
import strategy.DisplayMenu_GP1;
import strategy.GasPumpedMsg;
import strategy.GasPumpedMsg_GP1;
import strategy.PayMsg;
import strategy.PayMsg_GP1;
import strategy.PayType;
import strategy.PaytypeGP;
import strategy.PrintReceiptMsg;
import strategy.PrintReceiptMsg_GP1;
import strategy.PumpGasUnit;
import strategy.PumpGasUnit_GP1;
import strategy.ReadyMsg;
import strategy.ReadyMsgGP;
import strategy.RejectMsg;
import strategy.RejectMsgGP;
import strategy.ReturnCash;
import strategy.SetInitialValues;
import strategy.SetInitialValues_GP1;
import strategy.SetPrice;
import strategy.SetPrice_GP1;
import strategy.StopMsg;
import strategy.StopMsgGP;
import strategy.StoreCash;
import strategy.StoreData;
import strategy.StoreData_GP1;

public class ConcreteFactory1 implements AbstractFactory {
	
	//this implements the methods in abstract factory
	DataStore dataStore = new DataStore1();
	StoreData storedata = new StoreData_GP1();
	PayMsg paymsg = new PayMsg_GP1();

	DisplayMenu displaymenu = new DisplayMenu_GP1();
	RejectMsg rejectmsg = new RejectMsgGP();
	ReadyMsg readymsg = new ReadyMsgGP();
	PumpGasUnit pumpgasunit = new PumpGasUnit_GP1();
	GasPumpedMsg gaspumpedmsg = new GasPumpedMsg_GP1();
	StopMsg stopmsg = new StopMsgGP();
	PrintReceiptMsg printreceiptmsg = new PrintReceiptMsg_GP1();
	CancelMsg cancelmsg = new CancelMsgGP();
	SetInitialValues setinitialvalues = new SetInitialValues_GP1();
	PayType paytype = new PaytypeGP();
	SetPrice setprice = new SetPrice_GP1();

	public DataStore CreateDataStore() {
		return (this.dataStore);
	}
	
	public DataStore GetDataStore() {
		return this.dataStore;
	}
	
	@Override
	public StoreData getStoreData() {
		return this.storedata;
	}

	@Override
	public PayMsg getPayMsg() {
		return this.paymsg;
	}

	@Override
	public StoreCash getStoreCash() {
		return null;
	}

	@Override
	public DisplayMenu getDisplayMenu() {
		return this.displaymenu;
	}

	@Override
	public RejectMsg getRejectMsg() {
		return this.rejectmsg;
	}

	@Override
	public SetPrice getSetPrice() {
		return this.setprice;
	}

	@Override
	public ReadyMsg getReadyMsg() {
		return this.readymsg;
	}

	@Override
	public SetInitialValues getSetInitialValues() {
		return this.setinitialvalues;
	}

	@Override
	public PumpGasUnit getPumpGasUnit() {
		return this.pumpgasunit;
	}

	@Override
	public GasPumpedMsg getGasPumpedMsg() {
		return this.gaspumpedmsg;
	}

	@Override
	public StopMsg getStopMsg() {
		return this.stopmsg;
	}

	@Override
	public PrintReceiptMsg getPrintReceiptMsg() {
		return this.printreceiptmsg;
	}

	@Override
	public CancelMsg getCancelMsg() {
		return this.cancelmsg;
	}

	@Override
	public PayType getPayType() {
		return null;
	}
	
	@Override
	public ReturnCash getReturnCash() {
		return null;
	}

}
package abstractFactory;

import dataStore.DataStore;
import dataStore.DataStore1;
import dataStore.DataStore2;
import strategy.StoreCash_GP2;
import strategy.CancelMsg;
import strategy.CancelMsgGP;
import strategy.DisplayMenu;
import strategy.DisplayMenu_GP1;
import strategy.DisplayMenu_GP2;
import strategy.GasPumpedMsg;
import strategy.GasPumpedMsg_GP1;
import strategy.GasPumpedMsg_GP2;
import strategy.PayMsg;
import strategy.PayMsg_GP1;
import strategy.PayMsg_GP2;
import strategy.PayType;
import strategy.PaytypeGP;
import strategy.PrintReceiptMsg;
import strategy.PrintReceiptMsg_GP1;
import strategy.PrintReceiptMsg_GP2;
import strategy.PumpGasUnit;
import strategy.PumpGasUnit_GP1;
import strategy.PumpGasUnit_GP2;
import strategy.ReadyMsg;
import strategy.ReadyMsgGP;
import strategy.RejectMsg;
import strategy.RejectMsgGP;
import strategy.ReturnCash;
import strategy.ReturnCashGP;
import strategy.SetInitialValues;
import strategy.SetInitialValues_GP1;
import strategy.SetInitialValues_GP2;
import strategy.SetPrice;
import strategy.SetPrice_GP1;
import strategy.SetPrice_GP2;
import strategy.StopMsg;
import strategy.StopMsgGP;
import strategy.StoreCash;
import strategy.StoreData;
import strategy.StoreData_GP1;
import strategy.StoreData_GP2;

public class ConcreteFactory2 implements AbstractFactory{
	
	DataStore dataStore = null;
	StoreData storedata = null;
	PayMsg paymsg = null;
	StoreCash storecash = null;
	DisplayMenu displaymenu = null;
	ReadyMsg readymsg = null;
	PumpGasUnit pumpgasunit = null;
	GasPumpedMsg gaspumpedmsg = null;
	StopMsg stopmsg = null;
	PrintReceiptMsg printreceiptmsg = null;
	CancelMsg cancelmsg = null;
	SetInitialValues setinitialvalues  = null;
	PayType paytype = null;
	SetPrice setprice = null;
	ReturnCash returncash = null;
	
	public ConcreteFactory2(){
		dataStore = new DataStore2();
		storedata= new StoreData_GP2();
		paymsg = new PayMsg_GP2();
		storecash = new StoreCash_GP2();
		displaymenu = new DisplayMenu_GP2();
		readymsg = new ReadyMsgGP();
		pumpgasunit = new PumpGasUnit_GP2();
		gaspumpedmsg = new GasPumpedMsg_GP2();
		stopmsg = new StopMsgGP();
		printreceiptmsg = new PrintReceiptMsg_GP2();
		cancelmsg = new CancelMsgGP();
		setinitialvalues = new SetInitialValues_GP2();
		paytype = new PaytypeGP();
		setprice = new SetPrice_GP2();
		returncash = new ReturnCashGP();
	}
	public void ConcreteFactory() {

	}

	public DataStore CreateDataStore() {
		return (dataStore);
	}
	
	public DataStore GetDataStore() {
		return dataStore;
	}
	
	@Override
	public StoreData getStoreData() {

		return storedata;
	}

	@Override
	public PayMsg getPayMsg() {

		return paymsg;
	}

	@Override
	public StoreCash getStoreCash() {

		return storecash;
	}

	@Override
	public DisplayMenu getDisplayMenu() {

		return displaymenu;
	}

	@Override
	public RejectMsg getRejectMsg() {

		return null;
	}

	@Override
	public SetPrice getSetPrice() {

		return setprice;
	}

	@Override
	public ReadyMsg getReadyMsg() {

		return readymsg;
	}

	@Override
	public SetInitialValues getSetInitialValues() {

		return setinitialvalues;
	}

	@Override
	public PumpGasUnit getPumpGasUnit() {

		return pumpgasunit;
	}

	@Override
	public GasPumpedMsg getGasPumpedMsg() {

		return gaspumpedmsg;
	}

	@Override
	public StopMsg getStopMsg() {

		return stopmsg;
	}

	@Override
	public PrintReceiptMsg getPrintReceiptMsg() {

		return printreceiptmsg;
	}

	@Override
	public CancelMsg getCancelMsg() {

		return cancelmsg;
	}

	@Override
	public PayType getPayType() {

		return null;
	}

	@Override
	public ReturnCash getReturnCash() {

		return returncash;
	}

}
